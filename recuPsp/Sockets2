TCP
/************************************************************************************/
package RecuSocketsTCP;

import EjSockectsUDP.ej1SockectCliente1;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.Socket;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Sara
 */
public class Ej2SocketCliente
{
    public static void main(String[] args)
    {
        try {
            Socket cliente = new Socket("localhost", 7000);
            Random random = new Random();
       
            // Crear el array aleatorio
            int[] numAleatorios = new int[10];
            for (int i = 0; i < 10; i++) 
            {
                numAleatorios[i] = random.nextInt(101);
            }
            
            //enviar array al servidor
            ObjectOutputStream salida = new ObjectOutputStream(cliente.getOutputStream());
            salida.writeObject(numAleatorios);
            
            cliente.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//main
}//fin class
/************************************************************************************/
package RecuSocketsTCP;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;

/**
 *
 * @author Sara
 */
public class Ej2SocketServidor 
{
    public static void main(String[] args) throws ClassNotFoundException 
    {
        try {
            while (true)
            {
                ServerSocket servidor = new ServerSocket(7000);
                Socket cliente1 = servidor.accept();
                Socket visualizar = servidor.accept();

                ObjectInputStream entradaCliente1 = new ObjectInputStream(cliente1.getInputStream());
                ObjectOutputStream salidaVisualizar = new ObjectOutputStream(visualizar.getOutputStream());

                // Leer array del cliente1
                int[] array = (int[]) entradaCliente1.readObject();
                System.out.println("Array recibido del Cliente1: ");
                int suma = 0;
                int mayor = array[0]; 
                int menor = array[0]; 
                for (int i = 0; i < array.length; i++) { 
                    System.out.println(array[i]);
                    suma += array[i];
                    if (mayor < array[i]) {
                        mayor = array[i];
                    }
                    if (array[i] < menor) {
                        menor = array[i];
                    }
                }
                int[] resultados = {suma, mayor, menor};
                salidaVisualizar.writeObject(resultados);

                servidor.close();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//main
}//fin class
/************************************************************************************/
package RecuSocketsTCP;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.Socket;

/**
 *
 * @author Sara
 */
public class Ej2SocketVisualizar
{
    public static void main(String[] args) throws ClassNotFoundException {
        try {
            Socket cliente = new Socket("localhost", 7000);
            ObjectInputStream entrada = new ObjectInputStream(cliente.getInputStream());
       
            int[] resultados = (int[]) entrada.readObject();
            System.out.println("Suma de los elementos del array: " + resultados[0]);
            System.out.println("Número mayor del array: " + resultados[1]);
            System.out.println("Número menor del array: " + resultados[2]);
            
            cliente.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//main
}//fin class
/************************************************************************************/
UDP
