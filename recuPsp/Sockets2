TCP
/************************************************************************************/
package RecuSocketsTCP;

import EjSockectsUDP.ej1SockectCliente1;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.Socket;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Sara
 */
public class Ej2SocketCliente
{
    public static void main(String[] args)
    {
        try {
            Socket cliente = new Socket("localhost", 7000);
            Random random = new Random();
       
            // Crear el array aleatorio
            int[] numAleatorios = new int[10];
            for (int i = 0; i < 10; i++) 
            {
                numAleatorios[i] = random.nextInt(101);
            }
            
            //enviar array al servidor
            ObjectOutputStream salida = new ObjectOutputStream(cliente.getOutputStream());
            salida.writeObject(numAleatorios);
            
            cliente.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//main
}//fin class
/************************************************************************************/
package RecuSocketsTCP;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;

/**
 *
 * @author Sara
 */
public class Ej2SocketServidor 
{
    public static void main(String[] args) throws ClassNotFoundException 
    {
        try {
            while (true)
            {
                ServerSocket servidor = new ServerSocket(7000);
                Socket cliente1 = servidor.accept();
                Socket visualizar = servidor.accept();

                ObjectInputStream entradaCliente1 = new ObjectInputStream(cliente1.getInputStream());
                ObjectOutputStream salidaVisualizar = new ObjectOutputStream(visualizar.getOutputStream());

                // Leer array del cliente1
                int[] array = (int[]) entradaCliente1.readObject();
                System.out.println("Array recibido del Cliente1: ");
                int suma = 0;
                int mayor = array[0]; 
                int menor = array[0]; 
                for (int i = 0; i < array.length; i++) { 
                    System.out.println(array[i]);
                    suma += array[i];
                    if (mayor < array[i]) {
                        mayor = array[i];
                    }
                    if (array[i] < menor) {
                        menor = array[i];
                    }
                }
                int[] resultados = {suma, mayor, menor};
                salidaVisualizar.writeObject(resultados);

                servidor.close();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//main
}//fin class
/************************************************************************************/
package RecuSocketsTCP;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.Socket;

/**
 *
 * @author Sara
 */
public class Ej2SocketVisualizar
{
    public static void main(String[] args) throws ClassNotFoundException {
        try {
            Socket cliente = new Socket("localhost", 7000);
            ObjectInputStream entrada = new ObjectInputStream(cliente.getInputStream());
       
            int[] resultados = (int[]) entrada.readObject();
            System.out.println("Suma de los elementos del array: " + resultados[0]);
            System.out.println("Número mayor del array: " + resultados[1]);
            System.out.println("Número menor del array: " + resultados[2]);
            
            cliente.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//main
}//fin class
/************************************************************************************/
UDP
package RecuSocketsUDP;

import EjSockectsUDP.ej1SockectsServidor;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Sara
 */
public class Ej2SockectServidor
{
    public static void main(String[] args)
    {
        final int puerto = 5000;
        try(DatagramSocket servidor = new DatagramSocket(puerto))
        {
            while (true)
            {   
                byte[] numAleatorios = new byte[10];

                //recibir el array
                DatagramPacket entrada = new DatagramPacket(numAleatorios, numAleatorios.length);
                servidor.receive(entrada);
                numAleatorios = entrada.getData();
                System.out.println("Array recibido del cliente");

                //sacar las operaciones
                int suma = 0;
                int mayor = (int) numAleatorios[0];
                int menor = (int) numAleatorios[0];
                for (int i = 0; i < numAleatorios.length; i++)
                {
                    System.out.print((int)numAleatorios[i] + " ");
                    suma = (suma + (int)numAleatorios[i]);
                    if (mayor < numAleatorios[i])
                    {
                        mayor = numAleatorios[i];
                    }
                    if (menor > numAleatorios[i])
                    {
                        menor = numAleatorios[i];
                    }
                }
                System.out.println();//enviar resultado al cliente
                byte[] operaciones = new byte[3];
                operaciones[0] = (byte) suma;
                System.out.println("La sumana es:" + suma); 
                System.out.println("La sumana es:" + (byte)suma); 
                operaciones[1] = (byte) mayor;
                operaciones[2] = (byte) menor;
                InetAddress direccionCliente = entrada.getAddress();
                int puertoC = entrada.getPort();
                DatagramPacket enviar = new DatagramPacket(operaciones, operaciones.length, direccionCliente, puertoC);
                servidor.send(enviar);
            }
            
        }
        catch (IOException ex) {
            Logger.getLogger(ej1SockectsServidor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//main
}//class
/************************************************************************************/
package RecuSocketsUDP;

import EjSockectsUDP.ej1SockectCliente1;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Sara
 */
public class Ej2SocketCliente 
{
    public static void main(String[] args) throws SocketException
    {
        final int puerto = 5000;
        try (DatagramSocket cliente = new DatagramSocket())
        {
            byte[] buffer = new byte[1024];
            InetAddress direccion = InetAddress.getLocalHost();
            
            Random random = new Random();
       
            // Crear el array aleatorio
            byte[] numAleatorios = new byte[10];
            for (int i = 0; i < 10; i++) 
            {
                numAleatorios[i] = (byte) random.nextInt(11);
                System.out.print((int)numAleatorios[i] + " ");            
            }
            System.out.println();
            
            //enviar al servidor
            DatagramPacket enviar = new DatagramPacket(numAleatorios, numAleatorios.length, direccion, puerto);
            cliente.send(enviar);
            System.out.println("enviado array");
            
            //recibir del servidor
            byte[] resultados = new byte[1000];
            DatagramPacket entrada = new DatagramPacket(resultados, resultados.length);
            cliente.receive(entrada);
            resultados = entrada.getData();
            System.out.println("Resultados recibidos del servidor");
            
            //visualizar resultados 
            System.out.println("La suma del array es: " + (int)resultados[0]);
            System.out.println("El numero mayor del array es: " + resultados[1]);
            System.out.println("El numero menor del array es: " + resultados[2]);
            
            // Cerrar el socket del cliente
            cliente.close();
        }
        catch (SocketException | UnknownHostException ex) {
            Logger.getLogger(ej1SockectCliente1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ej1SockectCliente1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//main

}//fin class
